!커서를 기준으로 커서의 왼쪽스택과 오른쪽스택으로 나눌 수 있다.
커서를 왼쪽으로 한칸
	c
	x
b	y
a	z
오른쪽으로 한칸.
x
c
b	y
a	z
문자 삭제
c	x
b	y
a	z 에서  c를 없애주면 됨.
문자 삽입
c	x
b	y
a	z 에서 c위에 d를 push해주면 된다.

그러면 시간복잡도가 O(M)으로 줄어든다.
엄밀히 따지면 O(N+M)이 될 수 있다.

abcxyz

출력시에는 순서대로해줘야하기때문에 st2에 st1에 있는 것을 다 넣어준다.

영어 소문자
최대 600,000글자 까지 입력가능.
L개의 문자가 입력되어 있으면 
L+1개의 곳에 커서가 위치할 수 있다.

L : 왼쪽으로 한칸(맨앞이면 무시)
D : 오른쪽으로 한칸(맨뒤면 무시)
B : 커서 왼쪽에 있는 문자 삭제(맨앞이면 무시)
삭제로 인해 커서가 한칸 왼쪽으로 이동한것처럼 나타나지만 실제로 커서의 오른쪽에 있는 문자는 그대로.
P $ : $라는 문자를 커서 왼쪽에 추가.

문자열이 주어진다 길이는 N(1 <= N <= 100000)
M : 명령어의 개수가 주어지고,
이후에 명령이 M개(1 <= M <= 500,000)개 주어진다.

모든 명령어를 수행한 후 편집기에 입력되어 있는 문자를 출력한다.

중간에 있는걸 건드리는데 스택을 쓰네.
????
-> 그래서 스택 2개를 쓴다.
배열이나 벡터를 쓰면 삽입, 삭제 연산시에 시간이 너무 오래걸린다.
명령 M
M^2
60만이니 3600억.
