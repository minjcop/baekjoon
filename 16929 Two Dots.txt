!! DFS. 내 생각대로 풀려면 DFS로 구현해야 한다.
그리고, 시작지점을 체크하지 않으면 시작지점을 나중에 탐색하게 되므로,
마지막지점에서 시작지점에 접근할 수 있다.

같은 색으로 이루어진 사이클.
사이클에서 요소의 개수는 4개 이상이어야 한다.
처음과 끝요소가 만나야 한다.
사이클이 존재하는 경우 Yes, 없는 경우에는 No를 출력한다.

그래서 나이트의 이동, 토마토에서 처럼 [nx][ny] = [x][y] + 1로 해서.
사이클 내부에 0이 없으면 완료. 이런 식으로 문제를 해결하고자 했는데,
문제는 이 사이클 내부의 요소들만 어떻게 검사를 하느냐 하는 것이다.


